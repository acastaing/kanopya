#! /bin/bash
### BEGIN INIT INFO
# Provides:           kanopya-executor
# Required-Start:     mysql rabbitmq-server
# Required-Stop:      $network $remote_fs $syslog
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  Kanopya executor
# Description:        Kanopya executor
### END INIT INFO

set -e

. /lib/lsb/init-functions

PATH="/opt/kanopya/sbin:$PATH"
DAEMON="/opt/kanopya/sbin/kanopya-executor"
EXEC="kanopya-executor"
NAME="Kanopya executor"
CONF_FILE="/opt/kanopya/conf/executor.conf"
PIDFILE="/var/run/$EXEC.pid"
RETVAL=0

test -x "/opt/kanopya/sbin/$EXEC" || exit 1

# Defaults
PERL5LIB=\
/opt/kanopya/lib/common:\
/opt/kanopya/lib/administrator:\
/opt/kanopya/lib/monitor:\
/opt/kanopya/lib/executor:\
/opt/kanopya/lib/external:\
/opt/kanopya/lib/external/NetApp:\
/opt/kanopya/lib/orchestrator:\
/opt/kanopya/lib/mock

export PERL5LIB
KANOPYA_EXECUTOR_RUN=yes
KANOPYA_EXECUTOR_OPTS="-b -p $PIDFILE"

# Reads config file (will override defaults above)
[ -r /etc/default/kanopya ] && . /etc/default/kanopya

RUN_DAEMON=$KANOPYA_EXECUTOR_RUN
DAEMON_OPTS=$KANOPYA_EXECUTOR_OPTS

start() {
    echo -n "Starting $NAME"
    pidofproc -p $PIDFILE $DAEMON > /dev/null && status=0 || status=$?

    if [ $status == 0 ]; then
        RETVAL=1
    else
        if [ "$RUN_DAEMON" = "yes" ]; then
            start_daemon -p $PIDFILE $DAEMON $DAEMON_OPTS
            RETVAL=$?
        fi
    fi

    [ $RETVAL == 0 ] && log_success_msg || log_failure_msg
    return $RETVAL
}

stop() {
    echo -n "Stopping $NAME"
    pidofproc -p $PIDFILE $DAEMON > /dev/null && status=0 || status=$?

    if [ $status == 0 ]; then
        killproc -p $PIDFILE $DAEMON
        RETVAL=$?
        if [ -f $PIDFILE ]; then
            rm $PIDFILE
        fi
    else
        RETVAL=1
    fi

    [ $RETVAL == 0 ] && log_success_msg || log_failure_msg
    return $RETVAL
}

status() {
    pidofproc -p $PIDFILE $DAEMON > /dev/null && status=0 || status=$?

    if [ $status == 0 ]; then
        echo "$NAME is running"
    else
        echo "$NAME is not running"
    fi
    RETVAL=$status
    return $RETVAL
}

case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit $RETVAL
