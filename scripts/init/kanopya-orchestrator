#! /bin/bash
### BEGIN INIT INFO
# Provides:           kanopya-orchestrator
# Required-Start:     $network $remote_fs $syslog
# Required-Stop:      $network $remote_fs $syslog
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  Kanopya Orchestrator
# Description:        Kanopya Orchestrator
### END INIT INFO
#
# Author:    Antoine Castaing <antoine.castaing@hederatech.com>
#

set -e

. /lib/lsb/init-functions

PATH="/opt/kanopya/sbin:$PATH"
DAEMON="/opt/kanopya/sbin/kanopya-orchestrator"
EXEC="kanopya-orchestrator"
PIDFILE="/var/run/$EXEC.pid"

test -x /opt/kanopya/sbin/kanopya-orchestrator || exit 0

# Defaults
PERL5LIB=\
/opt/kanopya/lib/orchestrator/:\
/opt/kanopya/lib/monitor/:\
/opt/kanopya/lib/administrator/:\
/opt/kanopya/lib/common
export PERL5LIB
KANOPYA_ORCHESTRATOR_RUN=yes
KANOPYA_ORCHESTRATOR_OPTS=''


# Reads config file (will override defaults above)
[ -r /etc/default/kanopya ] && . /etc/default/kanopya

# Cd to / before starting any daemons.
cd /

echo "Welcome in kanopya-orchestrator start stop script"
echo "env variable are :"
echo "PERL5LIB : $PERL5LIB"
echo "KANOPYA_ORCHESTRATOR_RUN : $KANOPYA_ORCHESTRATOR_RUN"
echo "KANOPYA_ORCHESTRATOR_OPTS : $KANOPYA_ORCHESTRATOR_OPTS"

case "$1" in
  start)
    if [ -f $PIDFILE ]; then
	log_daemon_msg "Kanopya orchestrator already running"
    else
	log_daemon_msg "Starting Kanopya orchestrator services:"
	if [ "$KANOPYA_ORCHESTRATOR_RUN" = "yes" -a -f /opt/kanopya/conf/monitor.conf ]; then
	    start-stop-daemon --quiet --start --background --oknodo --make-pidfile --pidfile $PIDFILE --exec $DAEMON \
		-- $KANOPYA_ORCHESTRATOR_OPTS
	    log_progress_msg " Kanopya orchestrator"
	fi
    fi
    ;;
  stop)
    log_daemon_msg "Stopping Kanopya orchestrator service:"
    start-stop-daemon --quiet --stop --pidfile $PIDFILE --oknodo 
    log_progress_msg " kanopya orchestrator"
    echo "rm $PIDFILE"
    rm $PIDFILE
    ;;
  restart)
    log_daemon_msg "Restarting Kanopya orchestrator services:"
    if [ "$KANOPYA_ORCHESTRATOR_RUN" = "yes" -a -f /opt/kanopya/conf/monitor.conf ]; then
	start-stop-daemon --quiet --stop --pidfile $PIDFILE --oknodo 	
	rm $PIDFILE
	log_progress_msg " Kanopya orchestrator"
    fi
    # Allow the daemons time to exit completely.
    sleep 2
    start-stop-daemon --quiet --start --background --oknodo --make-pidfile --pidfile $PIDFILE --exec $DAEMON \
	    -- $KANOPYA_ORCHESTRATOR_OPTS
    ;;
  status)
    status=0
    status_of_proc /opt/kanopya/sbin/kanopya-orchestrator kanopya-orchestrator || status=$?
    exit $status
    ;;
  *)
    echo "Usage: /etc/init.d/kanopya-orchestrator {start|stop|restart|status}"
    exit 1
esac

exit 0
