#!/bin/ssh
# Vider les tables filter
iptables -t filter -F
# Vider les règles personnelles
iptables -t filter -X
iptables -t nat -X
# interdir  toute connexion entrante 
iptables -t filter -P INPUT DROP
# Les connexions destinées à être routées sont acceptées par défaut
iptables -t filter -P FORWARD ACCEPT
# Les connexions sortantes sont acceptées par défaut
iptables -t filter -P OUTPUT ACCEPT
# Pas de filtrage sur l'interface de "loopback"
iptables -t filter -A INPUT -i lo -j ACCEPT
# Accepter le protocole ICMP (notamment le ping)
iptables -t filter -A INPUT -p icmp -j ACCEPT
# Accepter le protocole IGMP (pour le multicast)
iptables -t filter -A  INPUT -p igmp -j ACCEPT
# Accepter les packets entrants relatifs à des connexions déjà
# établies : cela va plus vite que de devoir réexaminer toutes
# les règles pour chaque paquet.
iptables -t filter -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
#   ==== === ==== === ==== === ==== === ====
[% IF rule.iptables1_sec_rule_syn_flood %]
iptables -A FORWARD -p tcp --syn -m limit --limit 1/second --limit-burst 20 -j ACCEPT
iptables -A INPUT -p tcp --syn -m limit --limit 1/second --limit-burst 20 -j ACCEPT
iptables -A OUTPUT -p tcp --syn -m limit --limit 1/second --limit-burst 20 -j ACCEPT

iptables -A FORWARD -p tcp -m limit --limit 1/second --limit-burst 20 -j ACCEPT
iptables -A INPUT -p tcp -m limit --limit 1/second --limit-burst 20 -j ACCEPT
iptables -A OUTPUT -p tcp -m limit --limit 1/second --limit-burst 20 -j ACCEPT

iptables -A FORWARD -p udp -m limit --limit 1/second --limit-burst 20 -j ACCEPT
iptables -A INPUT -p udp -m limit --limit 1/second --limit-burst 20 -j ACCEPT
iptables -A OUTPUT -p udp -m limit --limit 1/second --limit-burst 20 -j ACCEPT

iptables -A INPUT -m state --state INVALID -j DROP
iptables -A FORWARD -m state --state INVALID -j DROP
iptables -A OUTPUT -m state --state INVALID -j DROP

iptables -A FORWARD -p udp -m limit --limit 1/second -j ACCEPT
iptables -A FORWARD -p tcp --syn -m limit --limit 1/second -j ACCEPT

iptables -A INPUT -p udp -m limit --limit 1/second -j ACCEPT
iptables -A INPUT -p tcp --syn -m limit --limit 1/second -j ACCEPT

iptables -A OUTPUT -p udp -m limit --limit 1/second -j ACCEPT
iptables -A OUTPUT -p tcp --syn -m limit --limit 1/second -j ACCEPT  
[% END %]
[% IF iptables1_sec_rule_scan_furtif %]
iptables -A FORWARD -p TCP --tcp-flags SYN,ACK,FIN,RST RST -m limit --limit 1/s -j ACCEPT
[% END %]
[% IF iptables1_sec_rule_ping_mort %]
iptables -A FORWARD -p icmp --icmp-type echo-request -m limit --limit 1/s -j ACCEPT
[% END %]
[% IF iptables1_sec_rule_anti_spoofing %]
iptables -t filter -A FORWARD -i eth0  @réseau -m state --state NEW  -j DROP 
[% END %]
[% FOREACH component=components %]
iptables -t filter -A INPUT -p [% component.protocol %] --dport [% component.port %] -j ACCEPT
[% END %]