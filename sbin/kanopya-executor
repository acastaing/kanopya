#!/usr/bin/perl -w
# kanopya-executor - This is the main script to run Kanopya Executor server.

#    Copyright Â© 2011 Hedera Technology SAS
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Maintained by Dev Team of Hedera Technology <dev@hederatech.com>.
# Created 14 july 2010

=head1 NAME

kanopya-executor - kanopya-executor Server

=head1 SYNOPSIS

    $ ./kanopya-executor

=head1 DESCRIPTION

Executor is the main script to run microCluster Executor server.

=head1 METHODS

=cut


use strict;
use warnings;

use Executor;
use AnyEvent;

use Kanopya::Config;
use Log::Log4perl 'get_logger';

my $dir = Kanopya::Config::getKanopyaDir();
Log::Log4perl->init($dir . '/conf/executor-log.conf');
my $log = get_logger("");

# Instantiate a condition variable to stop the service
my $condvar = AnyEvent->condvar;

sub signalHandler {
    my ($sig) = @_;
    $log->debug($sig." signal recieved : exiting main loop");

    # Interrupt the daemon event loop
    $condvar->croak("Service stopped.");
}

$SIG{TERM} = \&signalHandler;


eval {
    my $exec = Executor->new();
    $log->info("Entering main loop");

    # enter in the main loop and continue while $$running is true
    $exec->run(condvar => $condvar);
};
if($@) {
    my $err = $@;
    $log->error("$err");
    die("$err");
}

$log->warn("kanopya-executor stopped");
