#!/usr/bin/perl -w
# kanopya-collector.pl - This is the main script to run kanopya monitoring data collect.

#    Copyright Â© 2011 Hedera Technology SAS
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Maintained by Dev Team of Hedera Technology <dev@hederatech.com>.
# Created 14 july 2010

=head1 NAME

kanopya-collector - Collector

=head1 SYNOPSIS	    

	$ ./kanopya-collector

=head1 DESCRIPTION

Collector is the main script to run monitoring data collection.
Collector dynamically gather informations about clustered nodes and aggregates data for each cluster.

=head1 METHODS

=cut

use strict;
use warnings;
use Monitor::Collector;
use Kanopya::Config;
use Log::Log4perl "get_logger";
use Error qw(:try);

my $dir = Kanopya::Config::getKanopyaDir();
Log::Log4perl->init($dir.'/kanopya/conf/monitor-log.conf');
my $log = get_logger("collector");


my $running = 1;

sub signalHandler {
	my $sig = shift;
	$log->info($sig." received : stopping main loop");
	$running = 0;
}

#sub segfaultHandler {
#	use Devel::StackTrace;
#  	my $trace = Devel::StackTrace->new;
#	$log->error("SEGFAULT");
#	$log->debug( $trace->as_string );
#	$running = 0;
#}

$SIG{TERM} = \&signalHandler;
#$SIG{SEGV} = \&segfaultHandler;

eval	{
	my $collector = Monitor::Collector->new();
	$log->info("Starting main loop");
	# enter in the main loop and continue while $$running is true
	$collector->run(\$running);
};
if ($@) {
	my $ex = $@;
	$log->error("error in collector instanciation: $ex");
	die "Catch error in Monitoring::Collector instanciation: $ex";
};

$log->info("kanopya-collector end.");


__END__

=head1 AUTHOR

Copyright (c) 2010 by Hedera Technology Dev Team (dev@hederatech.com). All rights reserved.
This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.

=cut
